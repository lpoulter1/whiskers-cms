---
import { Image } from "astro:assets";
import { storyblokEditable } from "@storyblok/astro";

const { blok } = Astro.props;

const maxImagesToShow = 8;
const imagesToShow = blok.image.slice(0, maxImagesToShow);
const MAX_SM_IMAGES = 3;
const MAX_MD_IMAGES = 6;
---

<section
  {...storyblokEditable(blok)}
  id="dog-gallery"
  class="pt-24 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3"
>
  <dialog id="galleryDialog" class="overflow-clip aspect-[4/3]">
    <form method="dialog" class="aspect-[4/3]">
      <!-- js will put the image here -->
      <button class="absolute top-6 right-6 text-gray-700 font-bold text-2xl"
        >X</button
      >
    </form>
  </dialog>
  {
    imagesToShow.map((img, index) => {
      if (index >= MAX_SM_IMAGES) {
        if (index >= MAX_MD_IMAGES) {
          return (
            <button aria-label="show larger image" class="galleryDialogTrigger">
              <Image
                src={img.filename}
                alt=""
                class="hidden object-cover w-full h-full lg:block"
                inferSize={true}
              />
            </button>
          );
        }
        return (
          <button class="galleryDialogTrigger" aria-label="show larger image">
            <Image
              src={img.filename}
              alt=""
              class="hidden object-cover w-full h-full md:block"
              inferSize={true}
            />
          </button>
        );
      }

      return (
        <button class="galleryDialogTrigger" aria-label="show larger image">
          <Image
            src={img.filename}
            alt=""
            class="object-cover w-full h-full"
            inferSize={true}
          />
        </button>
      );
    })
  }
</section>
<style>
  #dog-gallery {
    display: grid;
    /* this is a big ugly todo in tailwind so using css directly */
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
  }
</style>

<script>
  const galleryDialogTriggers = document.querySelectorAll(
    ".galleryDialogTrigger"
  );
  const favDialog = document.getElementById(
    "galleryDialog"
  ) as HTMLDialogElement;

  galleryDialogTriggers.forEach((element) =>
    element.addEventListener("click", () => {
      const image = element.querySelector("img");
      const dialogForm = favDialog.querySelector("form");
      // clear last image
      dialogForm.querySelector("img")?.remove();
      dialogForm.appendChild(image.cloneNode(true));
      favDialog.showModal();
    })
  );
</script>
<style>
  #myImg {
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s;
  }

  :modal {
    background-color: beige;
    border: 2px solid burlywood;
    border-radius: 5px;
  }
</style>
